[package]
name = "wasmer-wasi"
version = "3.1.0"
description = "WASI implementation library for Wasmer WebAssembly runtime"
categories = ["wasm", "os"]
keywords = ["wasm", "webassembly", "wasi", "sandbox", "ABI"]
authors = ["Wasmer Engineering Team <engineering@wasmer.io>"]
repository = "https://github.com/wasmerio/wasmer"
license = "MIT"
readme = "README.md"
edition = "2018"

[dependencies]
cfg-if = "1.0"
thiserror = "1"
generational-arena = { version = "0.2" }
tracing = "0.1"
getrandom = "0.2"
wasmer-wasi-types = { path = "../wasi-types", version = "=3.1.0" }
wasmer = { path = "../api", version = "=3.1.0", default-features = false }
wasmer-vfs = { path = "../vfs", version = "=3.1.0", default-features = false }
wasmer-vbus = { path = "../vbus", version = "=3.1.0", default-features = false }
wasmer-vnet = { path = "../vnet", version = "=3.1.0", default-features = false }
wasmer-wasi-local-networking = { path = "../wasi-local-networking", version = "=3.1.0", default-features = false, optional = true }
typetag = { version = "0.1", optional = true }
serde = { version = "1.0", default-features = false, features = ["derive"], optional = true }
bincode = { version = "1.3", optional = true }
chrono = { version = "^0.4", default-features = false, features = [ "wasmbind", "std", "clock" ], optional = true }
derivative = { version = "^2" }
bytes = "1"
webc = { version = "3.0.1", optional = true, default-features = false, features = ["std", "mmap"] }
serde_cbor = { version = "0.11.2", optional = true }
anyhow = { version = "1.0.66", optional = true }
wasmer-emscripten = { path = "../emscripten", version = "=3.1.0", optional = true }

[target.'cfg(unix)'.dependencies]
libc = { version = "^0.2", default-features = false }

[target.'cfg(windows)'.dependencies]
winapi = "0.3"

[target.'cfg(target_arch = "wasm32")'.dependencies]
wasm-bindgen = "0.2.74"

[target.'cfg(target_arch = "wasm32")'.dev-dependencies]
wasm-bindgen-test = "0.3.0"
tracing-wasm = "0.2"

[features]
default = ["sys-default"]
wasix = []

webc_runner = ["webc", "serde_cbor", "anyhow", "serde", "wasmer/compiler", "wasmer/cranelift"]
webc_runner_rt_emscripten = ["wasmer-emscripten"]
webc_runner_rt_wasi = []

sys = ["wasmer/sys", "wasix", "wasmer-wasi-types/sys"]
sys-default = ["wasmer/wat", "wasmer/compiler", "sys", "logging", "host-fs", "sys-poll", "host-vnet" ]
sys-poll = []

js = ["wasmer/js", "mem-fs", "wasmer-vfs/no-time", "getrandom/js", "chrono", "wasmer-wasi-types/js"]
js-default = ["js", "wasmer/js-default"]
test-js = ["js", "wasmer/js-default", "wasmer/wat"]

host-vnet = [ "wasmer-wasi-local-networking" ]
host-fs = ["wasmer-vfs/host-fs"]
mem-fs = ["wasmer-vfs/mem-fs"]

logging = ["tracing/log"]
disable-all-logging = [
    "tracing/release_max_level_off",
    "tracing/max_level_off"
]
enable-serde = [
    "typetag",
    "serde",
    "bincode",
    "wasmer-vfs/enable-serde",
    "generational-arena/serde",
    "wasmer-wasi-types/enable-serde",
]
